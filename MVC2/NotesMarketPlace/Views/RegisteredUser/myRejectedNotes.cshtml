@model IPagedList<NotesMarketPlace.Models.SellerNote>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "RejectedNote";
    Layout = "~/Views/Shared/Front_user.cshtml";
}

    <!-- My Rejected Notes -->
    <section id="my-rejected">
        <div class="content-box-md content-box-sm content-box-xs">
            <div class="container rejected-wrapper">
                <div class="row margin-reset">
                    <div class="sub-heading dashboard">
                        <h4>My Rejected Notes</h4>

                    </div>

                    <form method="get">
                        <div class="s-btn">
                            <button class="btn btn-search" type="submit">search</button>
                        </div>
                        <div class="seach-bar">
                            <span class="search-icon"><img src="~/images/Dashboard/search-icon.svg"></span>

                            <div>
                                <input type="text" class="form-control border-none" id="search" name="search"
                                       value="@Request.QueryString["search"]" placeholder="Search">

                            </div>
                        </div>
                    </form>

                </div>


                <div class="table-responsive">
                    <table class="table border shadow">
                        <thead>
                            <tr>
                                <th scope="col">sr no.</th>
                                <th scope="col">note title</th>
                                <th scope="col">category</th>
                                <th scope="col">remarks</th>
                                <th scope="col">clone</th>
                                <th scope="col"> </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{int index = 1; }
                            @foreach (NotesMarketPlace.Models.SellerNote s in Model)
                            {
                                NotesMarketPlace.Models.NotesMarketPlaceEntities2 db = new NotesMarketPlace.Models.NotesMarketPlaceEntities2();
                                var category = db.NoteCategories.Where(e => e.ID == s.Category).FirstOrDefault();
                                var sellerAttach = db.SellerNotesAttachments.Where(e => e.NoteID == s.ID).FirstOrDefault();

                                <tr>
                                    <td class="sr-no">@index</td>
                                    <td class="blue" style="padding-right:0;"><a href="@Url.Action("NoteDetails", "RegisteredUser", new { id = s.ID })">@s.Title</a></td>
                                    <td style="text-align:center; ">@category.Name</td>
                                    @if (s.AdminRemarks == null)
                                    {
                                        <td>No Remarks</td>
                                    }
                                    else
                                    {
                                        <td>@s.AdminRemarks</td>
                                    }
                                    <td class="blue">Clone</td>
                                    <td>
                                        <div class="dropdown right">
                                            <img src="~/images/Dashboard/dots.svg" role="button" alter="client" class="img-responsive re-eye" href="#" id="dropdownMenuLink" data-toggle="dropdown" ` aria-haspopup="true" aria-expanded="false">

                                            <div class="dropdown-menu width-view">
                                                <div class="dropdown-item"><a href='@Url.Action("Download", "RegisteredUser", new {path=sellerAttach.FilePath })' style="color:#333;">Download Note</a></div><br>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>

                <div id="page" class="text-center">
                    @Html.PagedListPager(Model, i => Url.Action("BuyerRequests", "RegisteredUser", new { i, search = Request.QueryString["search"] }), new PagedListRenderOptions
                       {
                       ContainerDivClasses = null,
                       LiElementClasses = new string[] { "page-item1" },
                       UlElementClasses = new string[] { "pagination justify-content-center" },
                       LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
                       LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
                       MaximumPageNumbersToDisplay = 5,
                       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                       DisplayLinkToLastPage = PagedListDisplayMode.Never
                   })
                </div>
            </div>

        </div>
    </section>
    <!-- My Rejected Notes Ends -->
