@model IPagedList<NotesMarketPlace.Models.User>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "ManageAdministrator";
    Layout = "~/Views/Shared/Admin.cshtml";
}
<!-- Manage Administrator  -->
<section id="manageAdministrator">
    <div class="content-box-md content-box-sm">
        <div class="container manage-administrator-wrapper">
            <div class="row">
                <div class="sub-heading margin-reset">
                    <h4>Manage Administrator</h4>

                </div>
                <div class="row add-a-btn margin-reset">
                    <button class="btn btn-add-administrator" onclick='window.location = "@Url.Action("AddAdministrator","Admin")";'>add Administrator</button>
                </div>

                <form method="get">
                    <div class="s-btn">
                        <button class="btn btn-search" type="submit">search</button>
                    </div>
                    <div class="seach-bar">
                        <span class="search-icon"><img src="~/images/Dashboard/search-icon.svg"></span>

                        <div>
                            <input hidden name="sort" value="@Request.QueryString["sort"]"/>
                            <input type="text" class="form-control border-none" id="search" name="search"
                                   value="@Request.QueryString["search"]" placeholder="Search">

                        </div>
                    </div>
                </form>

            </div>

            <div class="table-responsive">
                <table class="table border shadow">
                    <thead>
                        <tr>
                            <th scope="col">sr no.</th>
                            <th scope="col"><a href="@Url.Action("ManageAdministrator","Admin",new { sort="FirstName",i=Request.QueryString["i"],search=Request.QueryString["search"]})">first name</a></th>
                            <th scope="col">last name</th>
                            <th scope="col">email</th>
                            <th scope="col">phone no.</th>
                            <th scope="col">date added</th>
                            <th scope="col">active</th>
                            <th scope="col">action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{int index = 1; }
                        @foreach (NotesMarketPlace.Models.User u in Model)
                        {
                            NotesMarketPlace.Models.NotesMarketPlaceEntities2 db = new NotesMarketPlace.Models.NotesMarketPlaceEntities2();
                            var up = db.UserProfiles.Where(e => e.UserID == u.ID).FirstOrDefault();
                            string joiningdate = String.Format("{0:dd-mm-yyyy, hh:mm}", u.CreatedDate);

                            <tr>
                                <td class="sr-no">@index</td>
                                <td>@u.FirstName</td>
                                <td>@u.LastName</td>
                                <td>@u.EmailID</td>
                                <td>@up.Phone_Number</td>
                                @if (u.CreatedDate != null)
                                {
                                    <td>@joiningdate</td>
}
                                else
                                {
                                    <td>NA</td>
}
                                @if (u.IsActive == true)
                                {
                                    <td class="sr-no">Yes</td>
}
                                else
                                {
                                    <td>NO</td>
}
                                <td>
                                    <img src="~/images/Dashboard/edit.png">
                                    <a href="@Url.Action("DeleteAdmin", "Admin", new { id = u.ID })"><img src="~/images/Dashboard/delete.png" class="eye"></a>
                                </td>
                            </tr>
                            index += 1;
                        }


                    </tbody>
                </table>
            </div>

            <div id="page" class="text-center">
                @Html.PagedListPager(Model, i => Url.Action("ManageAdministrator", "Admin", new { i, search = Request.QueryString["search"],sort=Request.QueryString["sort"] }), new PagedListRenderOptions
                   {
                   ContainerDivClasses = null,
                   LiElementClasses = new string[] { "page-item1" },
                   UlElementClasses = new string[] { "pagination justify-content-center" },
                   LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
                   LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
                   MaximumPageNumbersToDisplay = 5,
                   DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                   DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                   DisplayLinkToLastPage = PagedListDisplayMode.Never
               })
            </div>
        </div>

    </div>
</section>
<!-- Manage Administrator Ends -->
