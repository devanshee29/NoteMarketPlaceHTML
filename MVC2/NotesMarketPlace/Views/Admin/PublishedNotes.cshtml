@model IPagedList<NotesMarketPlace.Models.SellerNote>
@using PagedList;
@using PagedList.Mvc;
@{
    IEnumerable<NotesMarketPlace.Models.NoteCategory> category = ViewData["Category"] as IEnumerable<NotesMarketPlace.Models.NoteCategory>;
    IEnumerable<NotesMarketPlace.Models.User> user = ViewData["User"] as IEnumerable<NotesMarketPlace.Models.User>;
    IEnumerable<NotesMarketPlace.Models.User> approveby = ViewData["Buyer"] as IEnumerable<NotesMarketPlace.Models.User>;

}
@{
    ViewBag.Title = "PublishedNotes";
    Layout = "~/Views/Shared/Admin.cshtml";
}
<!-- Published Notes -->
<section id="publishedNotes">
    <div class="content-box-md content-box-sm">
        <div class="container publish-wrapper">
            <div class="row">
                <div class="sub-heading margin-reset">
                    <h4>Published Notes</h4>
                </div>
                <div class="row">
                    <form id="form1">
                        <div class="left">
                            <p>Seller</p>

                            <select onchange="onSubmit()" class="form-control seller" name="seller" id="seller">
                                <option value="">Seller</option>
                                @foreach (NotesMarketPlace.Models.SellerNote n in Model)
                                {
                                    foreach (var u in user)
                                    {
                                        if (n.SellerID == u.ID)
                                        {
                                            <option value="@u.ID">@u.FirstName</option>
                                        }
                                    }
                                }
                            </select>
                            <script>
                                    $("#seller").val("@Request.QueryString["seller"]");
                            </script>
                        </div>
                    </form>


                    <form method="get">
                        <div class="s-btn margin-right margin-reset">
                            <button class="btn btn-search" type="submit">search</button>
                        </div>
                        <div class="seach-bar">
                            <span class="search-icon"><img src="~/images/Dashboard/search-icon.svg"></span>
                            <div>
                                <input type="text" class="form-control border-none" id="search" name="search"
                                       value="@Request.QueryString["search"]" placeholder="Search">
                            </div>
                        </div>
                    </form>

                </div>



            </div>

            <div class="table-responsive">
                <table class="table border shadow">
                    <thead>
                        <tr>
                            <th scope="col">sr no.</th>
                            <th scope="col">note title</th>
                            <th scope="col" class="category">category</th>
                            <th scope="col">sell type</th>
                            <th scope="col" class="price">price</th>
                            <th scope="col" class="category">seller</th>
                            <th scope="col"> </th>
                            <th scope="col">published date</th>
                            <th scope="col">approved by</th>
                            <th scope="col" class="nod">number of downloads</th>
                            <th scope="col"> </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ int index = 1;}
                        @foreach (NotesMarketPlace.Models.SellerNote n in Model)
                        {
                            string Publishdate = String.Format("{0:dd-MM-yyyy,hh:mm}", n.CreatedDate);
                           
                        <tr>
                            <td class="sr-no">@index</td>
                            <td class="blue"><a href="@Url.Action("NoteDetails","Admin",new { id=n.ID})">@n.Title</a></td>
                            <td>@n.NoteCategory.Name</td>
                            @if (n.IsPaid == true)
                            {
                                <td>Paid</td>
                                <td>$@n.SellingPrice</td>
                            }
                            else
                            {
                                <td>Free</td>
                                <td>$0</td>
                            }

                            <td>@n.User.FirstName @n.User.LastName</td>
                            <td>
                                <a href="@Url.Action("MemberDetails","Admin",new { id=(n.SellerID)})"> <img src="~/images/Dashboard/eye.png" class="eye"></a>
                            </td>
                            <td>@Publishdate</td>
                            @foreach (var r in approveby)
                            {
                                if (r.ID == n.ActionedBy)
                                {
                                    <td>@r.FirstName @r.LastName</td>
                                }
                            }
                            <td class="sr-no blue">@TempData[n.ID.ToString()]</td>
                            <td>
                                <div class="dropdown right">
                                    <img src="~/images/Dashboard/dots.png" role="button" alter="client" class="img-responsive eye" href="#" id="dropdownMenuLink" data-toggle="dropdown" ` aria-haspopup="true" aria-expanded="false">


                                    <div class="dropdown-menu width-view">
                                        <div class="dropdown-item item-01"><a href='@Url.Action("Download", "RegisteredUser", new {path=TempData[n.ID.ToString() + "path"]})' style="color:#333;" class="btn-admin-download">Download Notes</a></div><br>
                                        <div class="dropdown-item"><a href='@Url.Action("NoteDetails", "Admin", new {id=n.ID })' style="color:#333;" class="btn-admin-download">View More Details</a></div><br>
                                        <div class="dropdown-item"><a href='@Url.Action("Unpublish", "Admin", new {id=n.ID })' style="color:#333;" class="btn-admin-download">Unpublish</a></div><br>
                                    </div>
                                </div>
                            </td>
                        </tr>
                            index += 1;
                        }


                    </tbody>
                </table>
            </div>

            <div id="page" class="text-center">
                @Html.PagedListPager(Model, i => Url.Action("PublishedNotes", "Admin", new { i, search = Request.QueryString["search"], seller = Request.QueryString["seller"] }), new PagedListRenderOptions
                {
                    ContainerDivClasses = null,
                    LiElementClasses = new string[] { "page-item1" },
                    UlElementClasses = new string[] { "pagination justify-content-center" },
                    LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
                    LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
                    MaximumPageNumbersToDisplay = 5,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                    DisplayLinkToLastPage = PagedListDisplayMode.Never
                })
            </div>
        </div>

    </div>
</section>
<!-- Published Notes -->
<script>
    function onSubmit() {
        document.getElementById('form1').submit();
    }
</script>